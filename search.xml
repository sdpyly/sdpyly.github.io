<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>清理VMware磁盘空间</title>
      <link href="/2024/07/14/config/vmware_clean/"/>
      <url>/2024/07/14/config/vmware_clean/</url>
      
        <content type="html"><![CDATA[<p>填充磁盘空间（做）<br>接下来，我们可以使用一个二进制0的文件来填充所有磁盘空间，并通过删除该文件来释放空间。按照以下步骤进行操作：</p><p>执行命令 <code>sudo apt-get clean</code> 清除残留的安装包（此步骤可选）。<br>执行命令 <code>sudo dd if=/dev/zero of=/0bits bs=20M</code>，将碎片空间填充为0。在执行过程中，可能会提示磁盘空间不足，但可以忽略该提示。</p><p>执行命令 <code>sudo rm -rf /0bits</code>，删除第二步中填充的文件。使用命令 df -h 可以发现可用的虚拟空间增加了很多，但实际的磁盘空间并没有减少。<br>收缩根目录-&gt;平台特定清理命令<br>最关键的一步是在虚拟机中收缩根目录。<br><code>.\vmware-vdiskmanager.exe -k D:\Vmware\Ubuntu2204\Ubuntu2204.vmdk</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux系统初始化</title>
      <link href="/2024/07/14/config/linux_init/"/>
      <url>/2024/07/14/config/linux_init/</url>
      
        <content type="html"><![CDATA[<p>包含Ubuntu、Centos等虚拟机，也包含raspberry等设备</p><h1 id="无显示器的树莓派配置"><a href="#无显示器的树莓派配置" class="headerlink" title="无显示器的树莓派配置"></a>无显示器的树莓派配置</h1><p>在Linux命令行下，执行<code>echo &#39;raspberry&#39; | openssl passwd -6 -stdin</code>获得密钥</p><p>创建userconf.txt文件，内容形如</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pi:$6$/4.VdYgDm7RJ0qM1$FwXCeQgDKkqrOU3RIRuDSKpauAbBvP11msq9X58c8Que2l1Dwq3vdJMgiZlQSbEXGaY5esVHGBNbCxKLVNqZW1</span><br></pre></td></tr></table></figure><p>创建一个名为ssh的空文件，开启ssh服务</p><h1 id="安装常见软件"><a href="#安装常见软件" class="headerlink" title="安装常见软件"></a>安装常见软件</h1><p>vim git gcc g++ net-tools tmux</p><h1 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=http://192.168.10.199:7890</span><br><span class="line"><span class="built_in">export</span> https_proxy=http://192.168.10.199:7890</span><br></pre></td></tr></table></figure><h1 id="安装oh-my-posh"><a href="#安装oh-my-posh" class="headerlink" title="安装oh-my-posh"></a>安装oh-my-posh</h1><p>需先配置代理</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> bin</span><br><span class="line">curl -s https://ohmyposh.dev/install.sh | bash -s -- -d ~/bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/home/pi/bin <span class="comment"># 注意修改用户名</span></span><br><span class="line"></span><br><span class="line">oh-my-posh font install</span><br><span class="line"><span class="comment"># 不存在该文件时新建</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> /usr/share/fonts/ttf</span><br><span class="line"><span class="comment"># 下载好的文件放入ttf文件中</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> *.ttf /usr/share/fonts/ttf</span><br><span class="line"><span class="comment"># 给予权限</span></span><br><span class="line"><span class="built_in">cd</span> /usr/share/fonts/ttf</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> 744 *</span><br><span class="line"><span class="comment"># 重新生成索引</span></span><br><span class="line"><span class="built_in">sudo</span> fc-cache -f -v</span><br></pre></td></tr></table></figure><p>在.bashrc或.zshrc中写入，注意修改用户名</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/home/pi/bin</span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(oh-my-posh init bash --config /home/pi/.cache/oh-my-posh/themes/robbyrussell.omp.json)</span>&quot;</span></span><br></pre></td></tr></table></figure><h1 id="配置ssh公钥登录"><a href="#配置ssh公钥登录" class="headerlink" title="配置ssh公钥登录"></a>配置ssh公钥登录</h1><p>创建公私钥对，形如<code>ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot; -f ~/.ssh/your_custom_name</code></p><p>若无~&#x2F;.ssh目录，可执行<code>ssh ubuntu@127.0.0.1</code>输入yes创建一个</p><p>在.ssh目录下创建<code>authorized_keys</code>文件，写入公钥</p><p>修改文件权限为600</p><p>客户端配置~&#x2F;.ssh&#x2F;config，形如</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host localubuntu</span><br><span class="line">HostName 192.168.73.133</span><br><span class="line">User ubuntu</span><br><span class="line">Port 22</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/local</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> initialize </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker记录</title>
      <link href="/2024/07/14/docker/index/"/>
      <url>/2024/07/14/docker/index/</url>
      
        <content type="html"><![CDATA[<h1 id="安装注意事项"><a href="#安装注意事项" class="headerlink" title="安装注意事项"></a>安装注意事项</h1><p>可按照官网安装步骤，注意以下事项</p><p>将gpg文件放在&#x2F;etc&#x2F;apt&#x2F;keyrings&#x2F;docker.asc 重命名 sudo chmod a+r &#x2F;etc&#x2F;apt&#x2F;keyrings&#x2F;docker.asc</p><p>执行<br>echo <br>  “deb [arch&#x3D;$(dpkg –print-architecture) signed-by&#x3D;&#x2F;etc&#x2F;apt&#x2F;keyrings&#x2F;docker.asc] <a href="https://mirrors.aliyun.com/docker-ce/linux/ubuntu">https://mirrors.aliyun.com/docker-ce/linux/ubuntu</a> <br>  $(. &#x2F;etc&#x2F;os-release &amp;&amp; echo “$VERSION_CODENAME”) stable” | <br>  sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list &gt; &#x2F;dev&#x2F;null</p><p>确保&#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list的内容为<br>deb [arch&#x3D;amd64 signed-by&#x3D;&#x2F;etc&#x2F;apt&#x2F;keyrings&#x2F;docker.asc] <a href="https://mirrors.aliyun.com/docker-ce/linux/ubuntu">https://mirrors.aliyun.com/docker-ce/linux/ubuntu</a>   jammy stable</p><p>将models放在&#x2F;home&#x2F;ubuntu&#x2F;Code&#x2F;SecGPT目录下，做端口映射和目录挂载<br>docker run -p 8080:7860 -d -v D:\Projects\PythonProjects\SecGPT\models:&#x2F;secgpt-mini&#x2F;models d1655c1ed1f2</p><h1 id="命令记录"><a href="#命令记录" class="headerlink" title="命令记录"></a>命令记录</h1><p>进入容器命令行<br><code>docker run -p 8080:7860 -it -v /home/ubuntu/Code/SecGPT/models:/secgpt-mini/models 1c5554c6582a /bin/bash</code></p><p>遇到该问题是transformer版本的问题，pip install  transformers&#x3D;&#x3D;4.40  -i <a href="https://mirrors.aliyun.com/pypi/simple/">https://mirrors.aliyun.com/pypi/simple/</a><br>ValueError: Tokenizer class Qwen2Tokenizer does not exist or is not currently imported.<br><a href="https://blog.csdn.net/zengNLP/article/details/138320888">https://blog.csdn.net/zengNLP/article/details/138320888</a></p><p>docker构建 <code>docker build -t secgpt_total:latest .</code></p><p>docker保存 <code>docker save -o secgpt_total.tar secgpt_total:latest</code></p><p>docker清缓存 <code>docker system prune</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/07/12/hello-world/"/>
      <url>/2024/07/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
